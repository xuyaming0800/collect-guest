<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
						http://www.springframework.org/schema/aop
						http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
						http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
						http://www.springframework.org/schema/context
						http://www.springframework.org/schema/context/spring-context-4.1.xsd
						http://www.springframework.org/schema/cache
						http://www.springframework.org/schema/cache/spring-cache-4.1.xsd">

	<bean id="urlperms"
		class="com.dataup.ccc.web.base.security.filter.UrlPermissionsAuthorizationFilter" >
	</bean>

	<bean id="shiroSecurityFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean"
		depends-on="urlperms">
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="/" />
		<property name="successUrl" value="/security/main.html" />
		<property name="unauthorizedUrl" value="/security/unauthorized.html" />
		<property name="filters">
			<map>
				<entry key="urlperms" value-ref="urlperms"></entry>
			</map>
		</property>
		<property name="filterChainDefinitions">
			<value>
				/ = anon
				/security/logout.html = logout
				/login.jsp = anon
				/error.jsp = anon
				/security/** = anon
				/mail/** = anon
				/user/** = anon
				/index/** = anon
				/security/doLogin.html = anon
				/security/unauthorized.html = anon
				/js/** = anon
				/css/** = anon
				/images/** = anon
				/fonts/** = anon
				/services/** = anon
				/base/** = anon
				/** = urlperms
			</value>
		</property>
	</bean>

	<bean id="shiroDataBaseRealm"
		class="com.dataup.ccc.web.base.security.realm.ShiroDataBaseRealm">
		<property name="authorizationCacheName" value="shiroAuthorizationCache" />
		<!--密码加密验证 -->
		<property name="credentialsMatcher">
			<bean class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
				<property name="hashAlgorithmName" value="SHA-1" />
				<property name="storedCredentialsHexEncoded" value="true" />
				<property name="hashIterations" value="1" />  
			</bean>
		</property>
	</bean>

	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="shiroDataBaseRealm" />
		<property name="sessionManager" ref="sessionManager" />
		<property name="cacheManager" ref="cacheManager" />
	</bean>

	<bean id="sessionManager"
		class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
		<property name="globalSessionTimeout" value="1800000" />
		<property name="sessionDAO" ref="redisSessionDAO" />
		<property name="sessionIdCookie" ref="sharesession" />
		<property name="sessionValidationSchedulerEnabled" value="true" />
	</bean>

	<bean id="sharesession" class="org.apache.shiro.web.servlet.SimpleCookie">
		<constructor-arg name="name" value="SHAREJSESSIONID" />
	</bean>

	<!-- redisSessionDAO -->
	<bean id="redisSessionDAO" class="org.crazycake.shiro.RedisSessionDAO">
		<property name="redisManager" ref="redisManager" />
	</bean>

	<!-- cacheManager -->
	<bean id="cacheManager" class="org.crazycake.shiro.RedisCacheManager">
		<property name="redisManager" ref="redisManager" />
	</bean>

	<!-- shiro redisManager -->
	<bean id="redisManager" class="org.crazycake.shiro.RedisManager">
		<property name="host" value="${redis.ip}" />
		<property name="port" value="${redis.port}" />
		<property name="expire" value="1800" />
		<property name="timeout" value="${redis.timeout}" />
<!-- 		<property name="password" value="${redis.password}" /> -->
	</bean>

	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />

 	<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">  
        <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>  
        <property name="arguments" ref="securityManager"/>  
    </bean>

</beans>